syntax = "proto3";

option java_package = "com.grpc.grpc_server";
option java_outer_classname = "MyServiceClass";

// ========================
// Service de Usuario
// ========================
service MyService {
  rpc Login(LoginRequest) returns (LoginResponse);
  rpc AltaUser(AltaUsuarioRequest) returns (AltaUsuarioResponse);
  rpc GetAllUsers(Empty) returns (UserListResponse);
  rpc UpdateUser(UpdateUsuarioRequest) returns (AltaUsuarioResponse);
  rpc DeleteUser(DeleteUsuarioRequest) returns (DeleteUsuarioResponse);
  rpc SendEmail(SendEmailRequest) returns (SendEmailResponse);
}

// ========================
// Messages de Usuarios
// ========================
message LoginRequest {
  string username = 1;
  string password = 2;
}

message LoginResponse {
  bool success = 1;
  string message = 2;
}

message AltaUsuarioRequest {
  string username = 1;
  string name = 2;
  string lastName = 3;
  string phone = 4;
  string email = 5;
  string role = 6;
}

message AltaUsuarioResponse {
  bool success = 1;
  string message = 2;
}

message UserDTO {
  string username = 1;
  string name = 2;
  string lastName = 3;
  string phone = 4;
  string email = 5;
  string role = 6;
  bool activated = 7;
}

message UserListResponse {
  repeated UserDTO users = 1;
}

// ========================
// Nuevos Messages para enviar correo
// ========================
message SendEmailRequest {
  string to = 1;          // Destinatario del correo
  string subject = 2;     // Asunto del correo
  string body = 3;        // Cuerpo del correo
}

message SendEmailResponse {
  bool success = 1;       // Indica si el envío fue exitoso
  string message = 2;     // Mensaje de respuesta (éxito o error)
}
message UpdateUsuarioRequest {
  string username = 1;
  string name = 2;
  string lastName = 3;
  string phone = 4;
  string email = 5;
  string role = 6;
}

message DeleteUsuarioRequest {
  string username = 1;
}

message DeleteUsuarioResponse {
  bool success = 1;
  string message = 2;
}

// ========================
// Service de eventos
// ========================
service EventService {
  rpc GetAllEvents(Empty) returns (EventListResponse);
}

// ========================
// Messages de eventos
// ========================
message Event {
  int32 id = 1;
  string nameEvent = 2;
  string descriptionEvent = 3;
  string dateRegistration = 4;
}

message EventListResponse {
  repeated Event events = 1;
}

// Mensaje vacío (si no hay parámetros de entrada)
message Empty {}